{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeffe\\\\Desktop\\\\react-app\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./styles.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport patientData from \"./patients.json\";\nimport orderData from \"./orders.json\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { Typography } from '@material-ui/core';\nimport { CardActions } from '@material-ui/core';\nimport { CardContent } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const patients = patientData;\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [orderId, setOrderId] = React.useState(0);\n  const [isEditable, setIsEditable] = React.useState(false); // const [currentOrder, setCurrentOrder] = React.useState(\"\");\n\n  const [ordersData, setOrdersData] = React.useState(orderData); // var orders = orderData;\n  // console.log({ patientData });\n\n  const useStyles = makeStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  });\n  const classes = useStyles();\n\n  const handleEdit = () => {\n    setIsEditable(!isEditable);\n  };\n\n  const handleClickOpen = id => {\n    setIsOpen(true);\n    setorderId(id); // setOrdersData(ordersData[id].Message);\n\n    console.log(id);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  const patientList = patients.map((patient, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"patientName\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: () => handleClickOpen(id),\n      children: patient.Name\n    }, id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this));\n\n  function changeToNewOrders(changedMessage, id, ordersData) {\n    console.log(\"I am here\");\n    let newOrdersData = [...ordersData];\n    let newOrder = { ...newOrdersData[id]\n    };\n    newOrder.Message = changedMessage; // console.log(newOrdersData)\n\n    newOrdersData[id] = newOrder; // console.log(newOrdersData)\n\n    return {\n      newOrdersData\n    };\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Patient list and orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          size: \"large\",\n          children: patientList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n          onClose: handleClose,\n          open: isOpen,\n          \"aria-labelledby\": \"customized-dialog-title\",\n          classes: {} // modal = {true}\n          // autoDetectWindowHeight={false} \n          // autoScrollBodyContent={false}\n          // contentStyle={{width: \"100%\", maxWidth: \"none\"}}\n          ,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card\",\n            variant: \"outlined\",\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: \"cardContent\",\n                color: \"textSecondary\",\n                paragraph: true,\n                children: \"Editing orders...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                label: patients[orderId].Name,\n                disabled: !isEditable,\n                value: ordersData[orderId].Message // onChange={(e) => setOrdersData(e.target.value)}\n                ,\n                onChange: e => {\n                  setOrdersData(changeToNewOrders(e.target.value, orderId, ordersData));\n                },\n                onBlur: () => setIsEditable(false)\n              }, orderId, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"input = \", ordersData[orderId].Message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: console.log(ordersData)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                variant: \"contained\",\n                onClick: handleEdit,\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 30\n                }, this),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SffKhmlGLjkkzF61pBtY1vAYXSk=\", true);\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jeffe/Desktop/react-app/my-app/src/App.js"],"names":["React","Button","Card","patientData","orderData","ButtonGroup","SaveIcon","EditIcon","Dialog","Typography","CardActions","CardContent","TextField","makeStyles","App","patients","isOpen","setIsOpen","useState","orderId","setOrderId","isEditable","setIsEditable","ordersData","setOrdersData","useStyles","root","display","alignItems","justifyContent","classes","handleEdit","handleClickOpen","id","setorderId","console","log","handleClose","patientList","map","patient","Name","changeToNewOrders","changedMessage","newOrdersData","newOrder","Message","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport patientData from \"./patients.json\";\nimport orderData from \"./orders.json\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { Typography } from '@material-ui/core';\nimport { CardActions } from '@material-ui/core';\nimport { CardContent } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nexport default function App() {\n  const patients = patientData;\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [orderId, setOrderId] = React.useState(0);\n  const [isEditable, setIsEditable] = React.useState(false);\n  // const [currentOrder, setCurrentOrder] = React.useState(\"\");\n  const [ordersData, setOrdersData] = React.useState(orderData);\n\n  // var orders = orderData;\n  // console.log({ patientData });\n\n  const useStyles = makeStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }\n  });\n  const classes = useStyles();\n\n  const handleEdit = () => {\n    setIsEditable(!isEditable);\n  };\n\n  const handleClickOpen = (id) => {\n    setIsOpen(true);\n    setorderId(id);\n    // setOrdersData(ordersData[id].Message);\n    console.log(id);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  const patientList = patients.map((patient, id) => (\n    <div class=\"patientName\">\n      <Button variant=\"outlined\" key={id} onClick={() => handleClickOpen(id)}>\n        {patient.Name}\n      </Button>\n    </div>\n  ));\n\n  function changeToNewOrders(changedMessage, id, ordersData) {\n    console.log(\"I am here\");\n    let newOrdersData = [...ordersData]\n    let newOrder = { ...newOrdersData[id] }\n    newOrder.Message = changedMessage\n    // console.log(newOrdersData)\n    newOrdersData[id] = newOrder\n    // console.log(newOrdersData)\n    return { newOrdersData }\n  };\n\n  return (\n    <div className=\"App\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h1>Patient list and orders</h1>\n        </div>\n        <div class=\"card-body\">\n          <Card size=\"large\">{patientList}</Card>\n          <Dialog\n            onClose={handleClose}\n            open={isOpen}\n            aria-labelledby=\"customized-dialog-title\"\n            classes={{}}\n          // modal = {true}\n          // autoDetectWindowHeight={false} \n          // autoScrollBodyContent={false}\n          // contentStyle={{width: \"100%\", maxWidth: \"none\"}}\n          >\n            <Card className='card' variant=\"outlined\">\n              <CardContent>\n                <Typography\n                  className='cardContent'\n                  color=\"textSecondary\"\n                  paragraph\n                >\n                  Editing orders...\n                  </Typography>\n                <TextField\n                  key={orderId}\n                  label={patients[orderId].Name}\n                  disabled={!isEditable}\n                  value={ordersData[orderId].Message}\n                  // onChange={(e) => setOrdersData(e.target.value)}\n                  onChange={(e) => { setOrdersData(changeToNewOrders(e.target.value, orderId, ordersData)) }}\n                  onBlur={() => setIsEditable(false)}\n                />\n                <div>input = {ordersData[orderId].Message}</div>\n                <div>{console.log(ordersData)}</div>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\"\n                  variant=\"contained\"\n                  onClick={handleEdit}\n                  color=\"primary\"\n                  startIcon={<EditIcon />}>\n                  Edit\n                  </Button>\n              </CardActions>\n            </Card>\n          </Dialog>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}