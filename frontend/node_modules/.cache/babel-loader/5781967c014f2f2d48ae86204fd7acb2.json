{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeffe\\\\Desktop\\\\react-app\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./styles.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport patientData from \"./patients.json\";\nimport orderData from \"./orders.json\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const patients = patientData;\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [dialogId, setDialogId] = React.useState(0);\n  const [isEditable, setIsEditable] = useState(false);\n  const [name, setName] = useState(\"\");\n  const classes = useStyles();\n  const useStyles = makeStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  });\n\n  const handleEdit = () => {\n    console.log(\"I am here\");\n    setIsEditable(!isEditable);\n  };\n\n  const styles = {\n    paper: {\n      minHeight: '80vh',\n      maxHeight: '80vh',\n      minWidth: '80vh',\n      maxWidth: '80vh'\n    }\n  };\n\n  const handleClickOpen = id => {\n    setIsOpen(true);\n    setDialogId(id);\n    console.log(id);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  var orders = orderData; // console.log({ patientData });\n\n  const patientList = patients.map((patient, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"patientName\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      id: id,\n      onClick: () => handleClickOpen(id),\n      children: patient.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this)); // var customDialog = <div />;\n  // if (open) {\n  //   customDialog =\n  //     <Dialog\n  //       onClose={handleClose}\n  //       open={open}\n  //       aria-labelledby=\"customized-dialog-title\"\n  //     >\n  //       {orders[dialogId].Message}\n  //     </Dialog>\n  // }\n  // function CustomDialog() {\n  //   if (open) {\n  //     return (\n  //       <Dialog\n  //         onClose={handleClose}\n  //         open={open}\n  //         aria-labelledby=\"customized-dialog-title\"\n  //       >\n  //         {orders[dialogId].Message}\n  //       </Dialog>\n  //     );\n  //   } else {\n  //     return <div></div>;\n  //   }\n  // }\n  // const allPatients = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Patient list and orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-body-left\",\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            size: \"large\",\n            children: patientList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n            onClose: handleClose,\n            open: isOpen,\n            \"aria-labelledby\": \"customized-dialog-title\",\n            classes: {} // modal = {true}\n            // autoDetectWindowHeight={false} \n            // autoScrollBodyContent={false}\n            // contentStyle={{width: \"100%\", maxWidth: \"none\"}}\n            ,\n            children: [orders[dialogId].Message, /*#__PURE__*/_jsxDEV(Card, {\n              className: classes.root,\n              variant: \"outlined\",\n              children: [/*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.title,\n                  color: \"textSecondary\",\n                  gutterBottom: true,\n                  children: \"Word of the Day\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"standard-basic\",\n                  label: \"Name:\",\n                  disabled: !isEditable,\n                  value: name,\n                  onChange: e => setName(e.target.value),\n                  onBlur: () => setIsEditable(false)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  onClick: handleEdit,\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"card-body-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"order-button\",\n            children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              variant: \"contained\",\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                color: \"primary\",\n                startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 52\n                }, this),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"secondary\",\n                startIcon: /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 54\n                }, this),\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DZViPa4OyCptgjjZmJ5qW4+kq20=\", true);\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/jeffe/Desktop/react-app/my-app/src/App.js"],"names":["React","Button","Card","patientData","orderData","ButtonGroup","SaveIcon","EditIcon","Dialog","App","patients","isOpen","setIsOpen","useState","dialogId","setDialogId","isEditable","setIsEditable","name","setName","classes","useStyles","makeStyles","root","display","alignItems","justifyContent","handleEdit","console","log","styles","paper","minHeight","maxHeight","minWidth","maxWidth","handleClickOpen","id","handleClose","orders","patientList","map","patient","Name","Message","title","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./styles.css\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport patientData from \"./patients.json\";\nimport orderData from \"./orders.json\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Dialog from \"@material-ui/core/Dialog\";\n\nexport default function App() {\n  const patients = patientData;\n  const [isOpen, setIsOpen] = React.useState(false);\n  const [dialogId, setDialogId] = React.useState(0);\n  const [isEditable, setIsEditable] = useState(false);\n  const [name, setName] = useState(\"\");\n  const classes = useStyles();\n  const useStyles = makeStyles({\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    }\n  });\n\n  const handleEdit = () => {\n    console.log(\"I am here\");\n    setIsEditable(!isEditable);\n  };\n\n  const styles = {\n    paper: {\n      minHeight: '80vh',\n      maxHeight: '80vh',\n      minWidth: '80vh',\n      maxWidth: '80vh',\n    },\n  };\n\n  const handleClickOpen = (id) => {\n    setIsOpen(true);\n    setDialogId(id);\n    console.log(id);\n  };\n\n  const handleClose = () => {\n    setIsOpen(false);\n  };\n\n  var orders = orderData;\n  // console.log({ patientData });\n\n  const patientList = patients.map((patient, id) => (\n    <div class=\"patientName\">\n      <Button variant=\"outlined\" id={id} onClick={() => handleClickOpen(id)}>\n        {patient.Name}\n      </Button>\n    </div>\n  ));\n\n  // var customDialog = <div />;\n\n  // if (open) {\n  //   customDialog =\n  //     <Dialog\n  //       onClose={handleClose}\n  //       open={open}\n  //       aria-labelledby=\"customized-dialog-title\"\n  //     >\n  //       {orders[dialogId].Message}\n  //     </Dialog>\n  // }\n\n  // function CustomDialog() {\n  //   if (open) {\n  //     return (\n  //       <Dialog\n  //         onClose={handleClose}\n  //         open={open}\n  //         aria-labelledby=\"customized-dialog-title\"\n  //       >\n  //         {orders[dialogId].Message}\n  //       </Dialog>\n  //     );\n  //   } else {\n  //     return <div></div>;\n  //   }\n  // }\n\n  // const allPatients = () => {};\n\n  return (\n    <div className=\"App\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <h1>Patient list and orders</h1>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"card-body-left\">\n            <Card size=\"large\">{patientList}</Card>\n            <Dialog\n              onClose={handleClose}\n              open={isOpen}\n              aria-labelledby=\"customized-dialog-title\"\n              classes={{}}\n            // modal = {true}\n            // autoDetectWindowHeight={false} \n            // autoScrollBodyContent={false}\n            // contentStyle={{width: \"100%\", maxWidth: \"none\"}}\n            >\n              {orders[dialogId].Message}\n              <Card className={classes.root} variant=\"outlined\">\n                <CardContent>\n                  <Typography\n                    className={classes.title}\n                    color=\"textSecondary\"\n                    gutterBottom\n                  >\n                    Word of the Day\n        </Typography>\n                  <TextField\n                    id=\"standard-basic\"\n                    label=\"Name:\"\n                    disabled={!isEditable}\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    onBlur={() => setIsEditable(false)}\n                  />\n                </CardContent>\n                <CardActions>\n                  <Button size=\"small\" onClick={handleEdit}>\n                    Edit\n                  </Button>\n                </CardActions>\n              </Card>\n            </Dialog>\n          </div>\n          <div class=\"card-body-right\">\n            <div>order</div>\n            <div class=\"order-button\">\n              <ButtonGroup variant=\"contained\">\n                <Button color=\"primary\" startIcon={<EditIcon />}>\n                  Edit\n                </Button>\n                <Button color=\"secondary\" startIcon={<SaveIcon />}>\n                  Save\n                </Button>\n              </ButtonGroup>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}